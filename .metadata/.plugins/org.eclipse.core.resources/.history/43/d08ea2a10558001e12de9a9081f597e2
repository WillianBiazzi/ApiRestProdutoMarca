import br.upf.produtomarca.controller.test;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

@SpringBootTest
@AutoConfigureMockMvc
public class UserControllerIntegrationTest {

    @Autowired
    private MockMvc mockMvc;

    @Test
    public void testInserirUsuarioComTokenValidoDeveRetornarStatus201() throws Exception {
        // Dados do usuário a ser inserido
        UserDTO user = new UserDTO();
        user.setNome("Nome do Usuário");
        user.setEmail("usuario@example.com");
        user.setSenha("senha123");

        // Token válido
        String token = "seu_token_aqui";

        mockMvc.perform(post("/produtomarca/user/inserir")
                .header("token", token)
                .contentType(MediaType.APPLICATION_JSON)
                .content(asJsonString(user)))
                .andExpect(status().isCreated());
    }

    @Test
    public void testInserirUsuarioComTokenInvalidoDeveRetornarStatus400() throws Exception {
        // Dados do usuário a ser inserido
        UserDTO user = new UserDTO();
        user.setNome("Nome do Usuário");
        user.setEmail("usuario@example.com");
        user.setSenha("senha123");

        // Token inválido
        String token = "token_invalido";

        mockMvc.perform(post("/produtomarca/user/inserir")
                .header("token", token)
                .contentType(MediaType.APPLICATION_JSON)
                .content(asJsonString(user)))
                .andExpect(status().isBadRequest())
                .andExpect(content().string("Token inválido!"));
    }

    // Método auxiliar para converter um objeto em uma representação JSON
    private static String asJsonString(final Object obj) {
        try {
            final ObjectMapper mapper = new ObjectMapper();
            return mapper.writeValueAsString(obj);
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
